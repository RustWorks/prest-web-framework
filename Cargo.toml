[package]
name = "prest"
description = "Progressive RESTful framework"
version = "0.1.0-alpha"
edition = "2021"
license = "MIT OR Apache-2.0"
homepage = "https://github.com/edezhic/prest"
repository = "https://github.com/edezhic/prest"
keywords = ["fullstack", "progressive", "RESTful", "PWA"]
categories = ["development-tools", "wasm", "web-programming"]

[lib]
name = "prest"
path = "./lib.rs"

[workspace]
members = ["examples/*", "html/macro", "embed/macro", "embed/utils"]

[features]
host = ["hyper-server"]
host-wasi = ["tokio_wasi", "hyper_wasi"]
sw = ["wasm-bindgen", "wasm-bindgen-futures", "js-sys", "web-sys", "console_error_panic_hook"]
build-pwa = ["toml", "wasm-bindgen-cli-support", "webmanifest"]
lazy-embed = ["embed-macro/lazy-embed", "embed-utils/lazy-embed"]

[dependencies]
html-macro = { path = "html/macro" }
embed-macro = { path = "embed/macro"}
embed-utils = { path = "embed/utils"}
anyhow = "1.0.75"
itoa = "1"
bytes = "1"
http = "0.2.9" 
mime_guess = "2"
hex = "0.4.3"
tower = "0.4.13"
futures-util = "0.3.28"
once_cell = "1.18"
axum = { git = "https://github.com/tokio-rs/axum", default-features = false, features = ["query", "form", "matched-path", "original-uri"] }
walkdir = "2.3.2"

# build-pwa deps:
toml = { version = "0.8.1", optional = true }
webmanifest = { version = "1.1.1", optional = true }
wasm-bindgen-cli-support = { version = "0.2.87", optional = true }

# host deps:
hyper-server = { version = "0.6.0", optional = true }

#[target.wasm32-wasi.dependencies]
tokio_wasi = { version = "1", features = ["rt", "macros", "net", "time", "io-util"], optional = true }
hyper_wasi = { version = "0.15", features = ["full"], optional = true }

# service worker deps:
#[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = { version = "0.2.87", optional = true }
wasm-bindgen-futures = { version = "0.4.37", optional = true }
js-sys = { version = "0.3.64", optional = true }
console_error_panic_hook = { version = "0.1.7", optional = true }
web-sys = { version = "0.3.64", optional = true, features = ["console", "FetchEvent",  "Request",  "ReadableStream",  "ReadableStreamDefaultReader", "Headers",  "ResponseInit",  "Response", "ServiceWorkerGlobalScope", "WorkerGlobalScope", "WorkerLocation"] }
